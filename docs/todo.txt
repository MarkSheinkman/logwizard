
- take some picture(s) with logwizard - to place on github

  - article: 
    - sharing thy log with coworkers/customer support/customers (two articles: Share with Coleagues / Customer Support)
	  - customer support - explain that they can have the developers look at the logs as well.

- search - allow starting from here (=default) or from top
- search - synchronize with full log

-------------------------------------------------------








	  - right click -> To Filter / To different color (show lines containing word in different color -> filter)

  - ctrl-f -> if there's something selected, just have that text entered by default (ctrl-shift-f should do that implicitly)
  - should skip those columns that are image only (for future - since i will allow this)



- context menu on any line (this will go on current view, TOTHINK what i can have on full log):
  - Rename View -> to rename the view, show source pane, after user presses enter, hide source pane (if it was not visible)
    - when editing view name, show "Press Enter to save"
  - start "mark" from current line
  - locate the filter that matched this (and open filter view if hidden)
  - Export This View to Disk...
  - Create a note on this line
  - To New Filter (Exclude all lines matching....)
  - Show all filters that matched this (a bit harder, since we need to select several rows in filter_ctrl; should check that it does not mess with .SelectedIndex)
  - show what other views contain this line - "Go to Other View Containing this line" -> and show which other views contain it
  - Change color of all lines .. (basically, create a filter that will show all lines with given color)
    if right click on a word -> create a filter that "line starts with word" or "line contains with word"
  - Remove Lines containing ... / starting with
    - for this, we'll have a special filter (apply to existing lines)
	- we simply append to it each time the user adds a "Remove" + perhaps with a comment line, like 'Eliminate words containing'
	- in time, we can actually have an extra menu option: "Show Back" - which will show all the things the user removed (and a "Show Back" command would just remove that)
  - Start Filter From Here (basically this creates the basic filter, and puts you into the driver seat -> takes you to edit the filter, after we have created it)
    example: user has selected "[find] pots", we'll create the default filter "$msg contains [find] pots", and show the Filters view, and then allow the user to tweak it
  - Just Show lines containing/starting with...
  - to alert?
  - view: Rename, move to left, move to right
- context menu on full log -> New Filter containing [...]/starting with [...]

- match_color -> in filters!!!
 




























- option: if a line doesn't match any logging syntax -> assume it's from previous line (keep it in the context?; probably - yes)

- alert -> allow showing a msg, beep, etc. when a certain msg is found
  for instance "same scrape" -> show a message when that happens
  or, when "overridden theme" gets written (for alerts - force refresh of the view all the time)
  by default -> the alert would show the message itself + perhaps beep?
  alerts - to be also shown in a left pane (as a new tab)
  when an alert happens -and it actually matches the current view - just show the alert sign (no need to show the message itself since the user already sees it)
  --------> when an alert happens, show it in the line number as an "!" icon - also, all views that contain an alert should have the "!" icon
  --------> checkbox - beep on alert + checkbox - bring LogWizard to top on alert
  ----- i should look for an alert in all the filters (in other words, maybe two filters match a line -> the first filter gives the color; but maybe the second one matches the alert)

  -> alerts - allow an alert to stop the program (have setting: alerts : break into code, default = yes).
     in this case, I need to create a special logger (that writes to shmem). then, use signals - after each log, we wait until the "alert" filters have been run
	 if an alert triggers (one that should be on - if "break into code" is turned off, then an alert must be specifically set to "break"),
	 then we stop the program. otherwise, the program continue
	 in our program -> we first run the 'alert' filters that can break (synchronously) - if anything matches, we signal this. otherwise, we allow the original program
	 (the one being debugged), to continue.
	 (note: see if it's easier to monitor for console)
	 note: when writing to shmem, the log pattern should match what you would write the the file.
	 (shmem -> have a setting - how to identify the beginning of hte program - like, a specific message gets written -> restarts logging)

  - new article (about monitoring your own log while debugging) + "bring to top/most on alt-tab"? "Logging and Debugging - they can get along"

  - alert: email? later = command line client that would monitor a certain log? and just do alerts? (include the msg?)
    - cmd line args: [type-of-log] [log-name]
	- allow dumping one of hte views?
	- TOTHINK when should we dump an email? by default, probably not. maybe only on the command line client?
	- later: in time, allow for this to be very thin (memory-wise), since we don't need to remember the matches - we only need to dump alerts, if needed
	- cmd line client should also be able to dump a certain view into another file (.txt or .html); this way, you might run it on Test results?















- allow using the surrounding lines - if a $part ends in a number, it's the prev/next line. 
  Example: $msg[2] (the second line from now), $time[-3] (the time 3 lines above), $thread[-12] (the thread 12 lines above)
  allow concatenating of several messages - like: $msg[-1,2] = prev msg + enter + msg + enter + next msg + next+1 msg
  This should be: 
  if "apply to existing lines" is checked -> the lines are only taken from this view
  if "apply to existing lines" is unchecked -> lines are taken from the log




- (pro_v) show delta - that is, how many millisecs from start? (maybe in secs or so?)
  this should be possible to be shown also from selected line (like, above are with "-", below with "+")



  - log syntax: should be grayed, so that you edit it in a different more user friendly manner.
    basically, you would have a "..." button
	if we can't figure out the syntax (msg[0] or just time+msg), say so in the Status (Err or Warn)
	perhaps if we can't figure the syntax: auto show the Source pane, otherwise, hide it perhaps?




- bug: when using rewritefile - using the C:\john\code\buff\win10-3\TableNinja2.log.7.rewritten.log -> writing 100 items at once, when they are added to a view that has no filters
  the line ending in 98 is sometimes not written fully (doing a refresh fixes the issue)
  i think the problem is that i'm reading a partial line and matching against that - very likely i should not include the last line until some time has passed or fully read



- log friendly name -> retest, useful for Denise (also, will be useful in the future, when we'll have several text readers)

- 'd' toggle details - this is the beginning of a larger feature -> allow showing details about the message (like, certain columns should show up in the list, and certain in the details - they can overlap)
  if turned on, the msg details is automatically off
  - i should also have a way to toggle msg_details on/off

- 's' - toggle status (info about the file/current view - like, file size, number of lines, how many lines the last Find matched; when loading a file -> write status about it)




- creating your filters? in that case, it would be quite useful to have a smaller log (so that when filters refresh, this happens quicker)
  we should have something that will only take 2Mb or so from the log. then, when toggled again, it will go back to the full log (and refresh)


- creating filters tutorial - have 2 tutorials for creating the same views (the views for TN2scrapepot) - one when editing filters manually, one with selecting words, and converting them to filters






- defaults: retest when using logwizard for first time 
  - also, Find -> have a button "Append to Filter" or something -> if the view name is "New_...", rename this as the contents of the search or something TOTHINK
  - right click on a column -> have an easy "Filter In/Out" dialog where the user can choose to execute something on that column
    - make sure we can do this with keys - i need to have a way to select a certain column with keys - so that when rightclicking on it, it would then open the Filter In/Out dialog
	  -- i should print the existing selected cell (column) with a slightly darker background (perhaps just use left/right arrows?)
	     probably: by default, there is no cell celected (just the row) - if pressing ->, we'll start selecting from the left-to-right
		                                                                - if pressing <-, we'll start selecting from right-to-left
	- the defaults (to filter IN or OUT) should be based on whether in current view or full log









- settings page: 
  - font for showing the message (like, Courier New?)
  - show column "Filter(s)" on full log (it takes more time to synchronize) (Speed tab)
  - colors for bookmarks
  - if to add "*" to the tab title when something changed -> this forces refresh of all  tabs all the time (Speed tab)

- level column -> allow transforming it into pictures
  - this should work on any column - we should be able to transform any context into picts

- article: testing with logwizard (allow command line as well?) 






- move file locally (toggle its location? - between current location/saved location)
  the idea is to move the file to a logwizard location and store it there - in case you usually keep logs in a temp dir which is sometimes deleted
  maybe i could have this automatically for logs having notes (only those not imported - those imported are already saved locally)?



---------------------------------------------------------------------------------

allow bolding or changing font or color or whatever of certain words/phrases
like, color=red for all "could not" text

- (low) log_line_parser.read_to_end - normally, when a line is incomplete and reparsed, we should reapply filters on it, because the line might have become complete now,
  thus, some filters might match now. however, it's not a big deal - normally logs should be flushed correctly (several lines at a time)

allow bolding or changing font or color or whatever of certain regexes?
like, in the message - if X matches Y -> mark it in a certain color or so.
case in point -> [time.stats] -> numbers -> if too big -> mark them in given color
---- at beginning, do this simple, like "match [time.stats] $number ms". Then, allow $number comparisons, like , $number > 100 => color something












- merging views into a given context (say two people are working on the same context) - you should be able to "import" the other guy's views without screwing your own
  (by default, back the current settings - just in case something goes wrong)
  - so in other words, say my collegue goes to Copy to clipboard a full context -> and sends it to me - I should be able to merge it with myown
  - new views are extremely easy - (I just add them)
  - existing views with different filters -> do i just add the new filters, erase existing ones? not really sure - perhaps a dialogue asking user what to do










- threads - allow showing threads in parallel - based message id - if too many threads, allow choosing which threads to show - sorted by absolute time
  - this should basically be by assigning a color to each thread's BACKGROUND. Then update the background for each line accordingly
    say we have 3 threads: one, two, three and assign to them : red, green, yellow
	we will have an extra column (perhaps the thread column anyway) what will divide itself into the number or different colors (3)
	then, based on this, it will show one of the 3 in a certain color (red, green, yellow) - each of the different colors will get a different slot
	then, 
	- the background of EACH line will update to a ligher version of the given thread color (like red -> very light red)
	- whenever a line is selected, all the lines from the same thread will be shown on a slighly darker background than usual (like red -> light red)
	--> same with any context or anything that can be a "filter". In other words, categorize by something (like, a module or so) (pro_v)

------------- talk with Vidi



- allow copy-paste of full-log into a cloud

- file:line -> allow showing the actual source code , eventually integrate with visual studio, 
  eventually think about root folder / and allow overriding it to your own
  integrate with github/bitbucket for open source projects? - look for api from github/bitbucket for retrieving files
  
- find: allow showing only the lines that matched the find condition (toggle)
- in visual studio -> if i'm at file:line -> go into logwizard and see what messages were written at this file:line -> create a view with those lines or something like that

- find -> convert to a filter 

---------------


- at some point: all commands should be available via menu - which should be turned on/off






- finding regex (pro_v) -> allow matching certain numbers etc. from the log lines, and then allow 
  - having charts based on them
  - or toggle on/off the results based on what was matched
  - from the regex -> from each line, we can extract several numbers -> we should be able to name each such number, and create charts based on them.
  - have a wizard that shows how to do this (for instance, on the wizard, take the 1000 first lines, and generate stuff, so that the user can create the chart;
    then, be able to run it on all data.)

- graphs/charts (pro_v?)
  - by default -> on timeline (like, have timeline from start to end, then, show on timeline, when most messages are written)
  - more: allow extracting the data from the lines themselves - like, [time] -> take off the ms from there, and allow showing graph data from there
          (+ ignore the lines that don't match[yes/no] - if yes, we create the graph with only matched data; if no, we create the graph with empty lines where there are no matches)
  - allow zooming on the chart? tothink
  - switching from graph to log and vice versa needs to be ***seamless***
  - while in the chart/graph - i should be able to move with hotkeys as well
  
- timeline (pro_v)
  - i need to be able to show each view (lines by color?) on timeline - for instance, be able to find where exactly (on the timeline) are most messages, errors, etc
  - i need to account for several days in this case (care about date/time, not just time)

- merge files - allow merging several files (we will allow up to some decent size, like 50M, then pro_v)

- probably 500Mb+ files (pro_v? optimize some stuff for such files)