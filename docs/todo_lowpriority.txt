
- note: i overode the hotkeys left/up/down/right/pgup/pgdn/home/end - so that they would work even if the control does not have focus
        this might not be the case now, so perhaps i don't really need to do it now? TOTHINK
		note: the only reason i may want to use the defaults is probably because they would be a bit faster 
		(we're doing lowlevelscroll -> maybe i can call another function?)


- loading large files -> optimize logwizard to load stuff 100% in the background, and show in the status bar as we're loading stuff (first file, then filters)

- show/hide views altogether -> allow hiding the views that don't interest you at this time
  (you might want to re-show them later, but for now, you don't care about them)

- allow hiding views - in case we have too many (we can show them at any time)
- mark views as "should never happen" - the idea is that we would want something like this:
    - have alerts on this view -> if any alert triggers, show this view - otherwise, keep it hidden
    = run on command line as well?

- parse log4net patterns: example: "%-50file(%4line): %date{HH:mm:ss,fff} %-10thread %-5level - %message%newline"
  if a .config file found, read it from there - prefer the pattern after FileAppender


- notes: have a setting: don't show deleted notes older than X days/hours - so that when toggling this ON, when you see hte deleted notes,
  you probably don't care about old ones - this probably makes sense when having lots of notes over the course of several days and so
  - it's so that i don't have to UNDO ever - even notes written by yourself, if you delete them, they are still visible

- notes: allow PURGING a note- ONLY possible on your own notes
        this does indeed delete the note, and will purge it when merging as well
		tihs will mark the note as "empty" and purged. 
		When you merge such a note, it's marked as PURGED.
		If there are replies on such a note, they won't be deleted, the text of the purged note will become "NOTE PURGED."

- when allowing more types of logs (like: not just from file)
  - at this point, it would make sense to have an option to save the log (the full log) to file

- notes: whether we keep fast/slow/by-file-name
  - this should be context dependent! it makes sense - for a certain type of files, we probably want just to have 'by file name'

- .logwizard -> should save bookmarks as well

- merging - keep stuff in the cloud? automatically merge (pro_v)

- navigate to stacktrace (pro_v)
  also, recognize it
  allow navigating to each line
- navigate to file:line (pro_v)
- navigate to message (pro_v) - try to find where the message came from, based on anything we can - like, file, class, function, etc.

- notes: disable sorting in the notesctrl

- (pro_v) comparing logs/view?
  do a diff of two views -see what is different in each - select which cols to compare (probably you would not want to compare times?)

- filter right click:
  - in time, we can actually have an extra menu option: "Show Back" - which will show all the things the user removed (and a "Show Back" command would just remove that)
  - smart edit as well : should skip those columns that are image only (for future - since i will allow this)


- auto updater from github
  - and write article about it
  - allow reading description (releases) from github, + identify the beta/stable (if needed) + identify version by release tag + 64/32 bit
  - read history from online file (history.txt) + in there, mark what to show to users - perhaps i should only read from the description of the release notes


- perhaps integrate with github - so that when looking at a message coming from a file:line -> look and see who modified that line?


- notes article: if feedback is positive, perhaps allow easy sharing of notes over intranet
  (so that you automatically save your notes on the intranet as well, and as you load them, you automatically merge them with what is there)
    - easy way to do: each user writes its notes to intranet into a guid-named file (thus - each user will only write its files so there are no clashes)
	  - you simply know the guid of the other users, and auto-import their notes 
	    - (need to find a way to know all the authors for a given file) -> probably use the guid that identifies the file and suffix it by the author name (to think what to do when user changes author name)
  - probably i may do this, but it's for sure not a priority



- list_data_source filter/show full log: this needs to work even when new lines are added!!!!!!! (like, monitoring live)



- allow wrapping lines (pro_v?)
  allow showing everthing the full line contains on the next rows
  probably have an extra 100 rows just for that and use them only if needed?
  we will adjust all the time, based on what row is to be shown now
  - also, we need to re-adjust when the user resizes the msg column
  - do we really want this?


- http://www.codeproject.com/Articles/512956/NET-Shell-Extensions-Shell-Context-Menus
  allow previewing a log file: that is, showing what each tab would look like; perhaps a set of files as well?
  this would allow me to look at several tn2 logs at the same time and show how many items each view has (they should all have the same context!)
  -- also, this should only work if the files have a file-to-context or forced-file-to-context set


- keep backups of files
  - of files up to X KB (or X.Y MB)
  - for up to Z MB
    example: keep backup of files up to 2.2MB, up to 100MB
  - note: backups for other types of logs is different!
