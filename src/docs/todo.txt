- article about event viewer - title: view Windows Event Logs can be fun
  - note: i will briefly mention outputdebugstring
  - explain about editing Description pane , etc.
  -- tidbits : about finding (what gets selected), about Description control, about copying records from event viewer
   - ask about what people would want in such a logviewer
   - find: about the fact that if searching for something, if not in the columns in View, is shown as slightly darker
   - find: allow searching in all columns (goes hand in hand with above); example: search for "john"
   - new log with lots of columns - show most of them in Details pane 
   --> reverse needs to be here


	










#10 - bug: sync colors - when sync with all logs -> then when showing all lines -> they will shown with the colors from the other views

#11 - bug: C:\Users\meeee\AppData\Local\PokerStars.EU\PokerStars.log.0 : The process cannot access the file 'C:\Users\meeee\AppData\Local\PokerStars.EU\PokerStars.log.0' because it is being used by another process.
  - basically if i try to open this log while PS is running, i will constantly get this, and the LW log will fill up needlessly

#12 - bug: after user makes a color filter -> clear selection, so that his new color filter takes place instantly (********in the smart edit)





#14 - find: have a "To Filter" button (good when doing regex search)
  - two possibilities -> Apply to existing Lines, Apply to Full Log
    + select Color/Match Color/default color?
	-- make this rather generic, so that later i can add more attributes if needed (this is also used in right-click)


- tip cp: allow only a class to access some functions
  - q: can i make this available on several classes?
     -- does it really work? can another class misuse it?
  - explain why : normally, you have a class just be private, or the class be inside another class
  - have lock class derive from lock_base<> so that i can just say some_class.lock ??
  - example: parser, text_reader -> there should be at most one parser per text_reader - text_reader created first TOTHINK is this a good example?
  - explain : easiest way: to just pass a variable of your type as argument. however, what if i just pass null? can i just say it should be NonNull?




     





#15 - allow column formatters 
This should basically work for both the view and the details pane (for instance, an xml msg could be shown in a friendly manner)
But for now, I may want to print several lines into one?

Column formatters should be allowed to have context (and eventually have settings based on which they do the formatting)
- for instance, i could specify, in settings -> what colors to apply to the text
- they need to be applied in such a way that they can add/modify colors of the text itself (or bold/italic etc.)
- Tuple<int,int,print_info> -> needs to become a class, so that i can deal with it in an easier fashion
    -- need to be able to easily iterate through all "prints" -> like in description_ctrl.show_sub_item (to make generic)





#8-aliases should be able to use in filters (***lo-case-no-space probably)
	- in filters - i should be able to use - the column name or the friendly-name-locase-no-space
	--> i already have the function to convert alias -> lw-columnname (to_logwizard_column_name)
	 -- see when i can resolve these names (as soon as aliases is loaded???)


#16 - option: if a line doesn't match any logging syntax -> assume it's from previous line 
  (keep it in the context?; probably - yes)
  probably only for line-by-line files

#17 - look around - when typing + or when ctrl-f -> this should be configurable (right now, 100 for typing, 1000 for ctrl-f)

#18 - allow more complicated expressions 

#19 allow to easily TAIL (so that for large files, really useful)
- allow showing new lines with a different color (when monitoring real-time)
  perhaps an image in the Line column - to think about when to stop showing it (like, perhaps after it's been seen once???)
- allow turning off real-time (toggling it)

#20 - allow "reverse" (so that I see the latest as first)









#21 For non-line, non-time, not-msg columns (VERY COOL TO HAVE)
- allow "snoop around", have something that looks like "show dropdown"
- this is basically an extremely easy filter for that column - it shows the unique values surrounding maybe 1000 lines or so  (perhaps allowing selecting unique values from all lines? - probably 50K should be enough) 
- allow snooping in all lines as well if the user wants to
- for each unique value - show how many lines match it
- this will be shown really nice and small exactly matching the [width] of the column
- selecting any row will filter by that -> allow converting that to filter
- show in status pane -> that we're filtering by that (allow ESC to toggle the filter off?)






#22 - level column -> allow transforming it into pictures
- this should work on any column - we should be able to transform any context into picts
- there should be 2 ways: to picture, to text + picture (when to-picture only -> take a lot less space(width))







#23 - bug: toggling enabled/dimmed will end up causing exceptions - seems it's because of all the forced reloads


#24 - bug: When using rewritefile - using the C:\john\code\buff\win10-3\TableNinja2.log.7.rewritten.log -> writing 100 items at once, when they are added to a view that has no filters
the line ending in 98 is sometimes not written fully (doing a refresh fixes the issue)
i think the problem is that i'm reading a partial line and matching against that - very likely i should not include the last line until some time has passed or fully read





#25 - smart edit (lo priority): 
- allow synchronizing what i type-search with full log (that is, show in both current view and full log) 
- both ways, from current view to full log and back
- allow synchronizing full log - match color with current view




